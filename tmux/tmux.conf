# ═══════════════════════════════════════════════════════
# Tmux AI Workspace Configuration
# Created for Frank Yang - VibeGhostty Project
# Theme: Tokyo Night Storm (matching Ghostty terminal)
# ═══════════════════════════════════════════════════════

# ───────────────────────────────────────────────────────
# Core Settings
# ───────────────────────────────────────────────────────

# 改變 prefix key 為 Ctrl+Space（更符合人體工學）
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# 啟用真彩色支援（與 Ghostty 配合）
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# 設定歷史記錄上限
set -g history-limit 50000

# 啟用滑鼠支援（方便調整 pane 大小）
set -g mouse on

# 減少按鍵延遲（提升反應速度）
set -s escape-time 0

# 重新編號 windows（關閉後自動調整）
set -g renumber-windows on

# 從 1 開始編號（0 在鍵盤太遠）
set -g base-index 1
setw -g pane-base-index 1

# 自動更新視窗標題
setw -g automatic-rename on
set -g set-titles on

# ───────────────────────────────────────────────────────
# Tokyo Night Storm Theme
# ───────────────────────────────────────────────────────

# 色彩定義（與 Ghostty 完全一致）
bg_dark="#1a1b26"
bg="#24283b"
bg_highlight="#292e42"
terminal_black="#414868"
fg="#c0caf5"
fg_dark="#a9b1d6"
fg_gutter="#3b4261"
dark3="#545c7e"
comment="#565f89"
dark5="#737aa2"
blue0="#3d59a1"
blue="#7aa2f7"
cyan="#7dcfff"
blue1="#2ac3de"
blue2="#0db9d7"
blue5="#89ddff"
blue6="#b4f9f8"
blue7="#394b70"
magenta="#bb9af7"
magenta2="#ff007c"
purple="#9d7cd8"
orange="#ff9e64"
yellow="#e0af68"
green="#9ece6a"
green1="#73daca"
green2="#41a6b5"
teal="#1abc9c"
red="#f7768e"
red1="#db4b4b"

# ───────────────────────────────────────────────────────
# Status Bar 設定
# ───────────────────────────────────────────────────────

# Status bar 位置和更新頻率
set -g status-position bottom
set -g status-interval 5

# Status bar 樣式
set -g status-style "fg=${fg},bg=${bg_dark}"

# 左側狀態列：顯示 session 名稱
set -g status-left-length 50
set -g status-left "#[fg=${bg_dark},bg=${blue},bold] 🚀 #S #[fg=${blue},bg=${bg_dark}]"

# 右側狀態列：顯示快捷鍵提示 + 時間
set -g status-right-length 120
set -g status-right "#[fg=${comment},bg=${bg_dark}] ?:help | m:modes | r:reload | |:vsplit | -:hsplit #[fg=${blue},bg=${bg_dark}]#[fg=${bg_dark},bg=${blue},bold] %H:%M #[fg=${purple},bg=${blue}]#[fg=${bg_dark},bg=${purple},bold] %Y-%m-%d "

# Window 狀態樣式
setw -g window-status-style "fg=${fg_dark},bg=${bg_dark}"
setw -g window-status-format " #I:#W "

# 活動 window 樣式
setw -g window-status-current-style "fg=${bg_dark},bg=${orange},bold"
setw -g window-status-current-format " #I:#W "

# Window 活動通知樣式
setw -g window-status-activity-style "fg=${yellow},bg=${bg_dark}"
setw -g window-status-bell-style "fg=${red},bg=${bg_dark},bold"

# ───────────────────────────────────────────────────────
# Pane 設定
# ───────────────────────────────────────────────────────

# Pane 邊框顏色
set -g pane-border-style "fg=${fg_gutter}"
set -g pane-active-border-style "fg=${blue}"

# Pane 標題設定（顯示 emoji 圖標）
set -g pane-border-status top
set -g pane-border-format "#[fg=${blue},bg=${bg_dark},bold] #{pane_title} #[default]"

# ───────────────────────────────────────────────────────
# Key Bindings - Vim Style Navigation
# ───────────────────────────────────────────────────────

# 重新載入配置（prefix + r）
bind r source-file ~/.tmux.conf \; display "🔄 Config reloaded!"

# 快捷鍵幫助（prefix + ?）
bind ? display-popup -E -w 80% -h 80% "cat << 'EOF'
╔════════════════════════════════════════════════════════════╗
║         VibeGhostty 快捷鍵速查表 (Cheatsheet)             ║
╠════════════════════════════════════════════════════════════╣
║                                                            ║
║  【Ghostty 快捷鍵】（macOS 原生，直接使用）               ║
║  ─────────────────────────────────────────────────────  ║
║    Cmd + T          新建 Tab                              ║
║    Cmd + W          關閉 Tab                              ║
║    Cmd + 1/2/3      跳轉到 Tab 1/2/3（最常用）           ║
║    Cmd + D          向右分割視窗                          ║
║    Cmd + Shift + D  向下分割視窗                          ║
║                                                            ║
║  【Tmux 快捷鍵】（需要先按 Ctrl+Space）                   ║
║  ─────────────────────────────────────────────────────  ║
║    Ctrl + Space     Prefix（啟動 Tmux 命令）             ║
║    ?                顯示這個幫助                          ║
║    r                重新載入配置                          ║
║    |                向右分割 pane                         ║
║    -                向下分割 pane                         ║
║    h/j/k/l          Vim 風格導航（左/下/上/右）          ║
║    1/2/3/4/5        跳轉到 pane 1~5                       ║
║    z                全屏/還原當前 pane                    ║
║                                                            ║
║  【常用工作流程】                                          ║
║  ─────────────────────────────────────────────────────  ║
║    1. Cmd+T → 開新 Tab                                   ║
║    2. Cmd+1/2/3 → 快速切換                               ║
║    3. Cmd+D → 並排比較 AI 輸出                           ║
║    4. tmux-launch → 啟動預設布局                         ║
║                                                            ║
║  【Tmux 布局腳本】                                         ║
║  ─────────────────────────────────────────────────────  ║
║    tmux-launch              互動式選單                    ║
║    ai-workspace.sh          AI 工作空間（70/30 布局）    ║
║    ai-split.sh            AI 分割模式（50/50 並排）    ║
║    full-focus.sh            全屏專注模式                  ║
║                                                            ║
╚════════════════════════════════════════════════════════════╝

按任意鍵關閉...
EOF
read -n 1"

# 快速模式選單（prefix + m）
set -g @vibe-switch-height 20
bind m display-menu -T "#[align=centre]🚀 VibeStart Modes" \
    "Dev Mode" d "split-window -v -p #{@vibe-switch-height} -b -c \"#{pane_current_path}\" \"sh -lc 'vibe-start --mode dev && tmux kill-pane'\"" \
    "Debug Mode" b "split-window -v -p #{@vibe-switch-height} -b -c \"#{pane_current_path}\" \"sh -lc 'vibe-start --mode debug && tmux kill-pane'\"" \
    "Review Mode" r "split-window -v -p #{@vibe-switch-height} -b -c \"#{pane_current_path}\" \"sh -lc 'vibe-start --mode review && tmux kill-pane'\"" \
    "" "" "" \
    "Interactive" i "split-window -v -p #{@vibe-switch-height} -b -c \"#{pane_current_path}\" \"sh -lc 'vibe-start && tmux kill-pane'\"" \
    "Shell Control" s "split-window -v -p #{@vibe-switch-height} -b -c \"#{pane_current_path}\""

# 分割 panes（更直覺的按鍵）
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# 新建 window（保持當前路徑）
bind c new-window -c "#{pane_current_path}"

# Vim-style pane 導航（prefix + hjkl）
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 快速跳轉到特定 pane（prefix + 數字）
bind 1 select-pane -t 0
bind 2 select-pane -t 1
bind 3 select-pane -t 2
bind 4 select-pane -t 3
bind 5 select-pane -t 4

# Vim-style pane 大小調整（prefix + Shift+hjkl）
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 快速縮放 pane（prefix + z）
bind z resize-pane -Z

# ───────────────────────────────────────────────────────
# Copy Mode - Vim Style
# ───────────────────────────────────────────────────────

# 進入 copy mode（prefix + [）
setw -g mode-keys vi

# Vim-style 複製選取
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# macOS 剪貼簿整合
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# ───────────────────────────────────────────────────────
# TPM Plugin Manager
# ───────────────────────────────────────────────────────

# TPM 插件列表
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-logging'

# ───────────────────────────────────────────────────────
# Plugin Settings
# ───────────────────────────────────────────────────────

# tmux-resurrect：復原 session 設定
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# tmux-continuum：自動儲存設定（每 15 分鐘）
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# tmux-logging：日誌記錄設定
set -g @logging-path "~/.tmux/logs"

# ───────────────────────────────────────────────────────
# AI Workspace Specific
# ───────────────────────────────────────────────────────

# 設定預設 pane 標題
set-hook -g after-new-window 'select-pane -T "🚀 Terminal"'
set-hook -g after-split-window 'select-pane -T "📟 Pane"'

# ───────────────────────────────────────────────────────
# Initialize TPM (必須放在配置文件最後)
# ───────────────────────────────────────────────────────

# 安裝 TPM（如果不存在）
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# 啟動 TPM
run '~/.tmux/plugins/tpm/tpm'

# ═══════════════════════════════════════════════════════
# End of Configuration
# ═══════════════════════════════════════════════════════
